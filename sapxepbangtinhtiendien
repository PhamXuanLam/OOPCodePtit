tinhtiendien/Client.java
package tinhtiendien;

public class Client implements Comparable<Client>{
    private String code, used;
    private int index_old, index_new, coefficient, money, additional, pay;
    public Client(){}
    public Client(int n, String used, int index_old, int index_new) {
        this.code = "KH" + String.format("%02d", n);
        this.used = used;
        this.index_old = index_old;
        this.index_new = index_new;
        this.coefficient = solveCoefficient(used);
        this.money = (index_new - index_old)*coefficient*550;
        this.additional = solveAdditional();
        this.pay = money + additional;
    }
    private int solveCoefficient(String s) {
        int res;
        if(s.equals("KD")) res = 3;
        else if(s.equals("NN")) res = 5;
        else if(s.equals("TT")) res = 4;
        else res = 2;
        return res;
    }
    private int solveAdditional() {
        int tmp = index_new - index_old;
        int res;
        double TMP;
        if(tmp < 50) TMP = 0;
        else if(tmp <= 100) TMP = (money/100.0)*35;
        else TMP = money;
        res = (int) Math.round(TMP);
        return res;
    }
    @Override 
    public String toString() {
        return code + " " + coefficient + " " + money + " " + additional + " " + pay;
    }
    @Override
    public int compareTo(Client o) {
        if(o.pay > this.pay) return 1;
        else if(o.pay < this.pay) return -1;
        else return 0;
    }
}

tinhtiendien/Main.java
package tinhtiendien;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int n = Integer.parseInt(input.nextLine());
        ArrayList<Client> list = new ArrayList<>();
        for(int i = 0; i < n; i++) {
            Client client = new Client(i + 1, input.nextLine(), Integer.parseInt(input.nextLine()), Integer.parseInt(input.nextLine()));
            list.add(client);
        }
        Collections.sort(list);
        for(Client client: list) {
            System.out.println(client);
        }
        input.close();
    }
}

