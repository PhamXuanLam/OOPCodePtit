package Test;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        while(t-->0){
        Point3D p1 = new Point3D(sc.nextInt(),sc.nextInt(),sc.nextInt());
        Point3D p2 = new Point3D(sc.nextInt(),sc.nextInt(),sc.nextInt());
        Point3D p3 = new Point3D(sc.nextInt(),sc.nextInt(),sc.nextInt());
        Point3D p4 = new Point3D(sc.nextInt(),sc.nextInt(),sc.nextInt());
        
        if(Point3D.check(p1,p2,p3,p4)){
            System.out.println("YES");
        } else{
            System.out.println("NO");
        }
        }
    }
    public static void main1082706(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        while(t-->0){
        Point3D p1 = new Point3D(sc.nextInt(),sc.nextInt(),sc.nextInt());
        Point3D p2 = new Point3D(sc.nextInt(),sc.nextInt(),sc.nextInt());
        Point3D p3 = new Point3D(sc.nextInt(),sc.nextInt(),sc.nextInt());
        Point3D p4 = new Point3D(sc.nextInt(),sc.nextInt(),sc.nextInt());
        
        if(Point3D.check(p1,p2,p3,p4)){
            System.out.println("YES");
        } else{
            System.out.println("NO");
        }
        }
        sc.close();
    }
}

class Point3D {
    private int x, y, z;
    public Point3D() {
        x = 0; y = 0; z = 0;
    }
    public Point3D(int x, int y, int z) {
        this.x = x; 
        this.y = y;
        this.z = z;
    }
    public int getX() {
        return x;
    }
    public int getY() {
        return y;
    }
    public int getZ() {
        return z;
    }
    static boolean check(Point3D p1, Point3D p2, Point3D p3, Point3D p4) {
            Vector p1p2 = new Vector(p1, p2);
            Vector p1p3 = new Vector(p1, p3);
            Vector p1p4 = new Vector(p1, p4);
            Vector co_huong = p1p2.directed_multiplier(p1p3);
            int vo_huong = co_huong.scalar_multiplier(p1p4);
            if(vo_huong == 0) return true;
            else return false;
    } 
    @Override
    public String toString() {
        return x + " " + y + " " + z;
    }
}
class Vector {
    private int x, y, z;
    public Vector() {
        x = 0; y = 0; z = 0;
    }
    public Vector(int x, int y, int z) {
        this.x = x; 
        this.y = y;
        this.z = z;
    }
    public Vector(Point3D p1, Point3D p2) {
        this.x = p2.getX() - p1.getX();
        this.y = p2.getY() - p1.getY();
        this.z = p2.getZ() - p1.getZ();
    }
    public Vector directed_multiplier(Vector v) {
        Vector vector = new Vector();
        vector.x = this.y*v.z - this.z*v.y;
        vector.y = this.z*v.x - this.x*v.z;
        vector.z = this.x*v.y - this.y*v.x;
        return vector;
    }
    public int scalar_multiplier(Vector v) {
        return this.x*v.x + this.y*v.y + this.z*v.z;
    }
    @Override
    public String toString() {
        return x + " " + y + " " + z;
    }
}

